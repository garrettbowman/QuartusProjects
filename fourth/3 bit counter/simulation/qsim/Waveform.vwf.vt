// Copyright (C) 2019  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "06/11/2021 08:49:50"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          Lab3_3bit_Cnt
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module Lab3_3bit_Cnt_vlg_vec_tst();
// constants                                           
// general purpose registers
reg B;
reg C0;
reg C1;
reg C2;
reg CLK;
reg F;
reg S0;
reg S1;
reg S2;
// wires                                               
wire Q0;
wire Q1;
wire Q2;
wire SP;

// assign statements (if any)                          
Lab3_3bit_Cnt i1 (
// port map - connection between master ports and signals/registers   
	.B(B),
	.C0(C0),
	.C1(C1),
	.C2(C2),
	.CLK(CLK),
	.F(F),
	.Q0(Q0),
	.Q1(Q1),
	.Q2(Q2),
	.S0(S0),
	.S1(S1),
	.S2(S2),
	.SP(SP)
);
initial 
begin 
#1200000 $finish;
end 

// F
initial
begin
	F = 1'b0;
	F = #800000 1'b1;
end 

// B
initial
begin
	B = 1'b0;
	B = #400000 1'b1;
	B = #400000 1'b0;
end 

// CLK
initial
begin
	repeat(23)
	begin
		CLK = 1'b0;
		CLK = #25000 1'b1;
		# 25000;
	end
	CLK = 1'b0;
	CLK = #25000 1'b1;
	CLK = #24000 1'b0;
end 

// S2
initial
begin
	S2 = 1'b1;
end 

// S1
initial
begin
	S1 = 1'b1;
end 

// S0
initial
begin
	S0 = 1'b1;
end 

// C2
initial
begin
	C2 = 1'b1;
end 

// C1
initial
begin
	C1 = 1'b1;
end 

// C0
initial
begin
	C0 = 1'b1;
end 
endmodule

